syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "example.com/oms/common/api";

package api;

// Order
message Order {
    string id = 1;
    string customerId = 2;
    string status = 3;
    repeated Item items = 4;
}

message Item {
    string id = 1;
    string name = 2;
    int32 quantity = 3;
    string priceId = 4;
}

message ItemsWithQuantity {
    string id = 1;
    int32 quantity = 2;
}

message CreateOrderRequest {
    string customerId = 1;
    repeated ItemsWithQuantity items = 2;
}

service OrderService {
    rpc CreateOrder(CreateOrderRequest) returns (Order);
}

// Menu
message MenuItem {
    string id = 1;
    string name = 2;
    int32 unitPrice = 3;
    string currency = 4;
}

message CreateMenuItemRequest {
    string name = 1;
    int32 unitPrice = 2;
    string currency = 3;
}

message GetMenuItemRequest {
    string id = 1;
}

message UpdateMenuItemRequest {
    string id = 1;
    string name = 2;
    int32 unitPrice = 3;
    string currency = 4;
}

message UpdateMenuItemResponse {
    string message = 1;
}

message DeleteMenuItemRequest {
    string id = 1;
}    

message DeleteMenuItemResponse {
    string message = 1;
}

message MenuItemList {
    repeated MenuItem items = 1;
}

service MenuService {
    rpc CreateMenuItem(CreateMenuItemRequest) returns (MenuItem);
    rpc GetMenuItem(GetMenuItemRequest) returns (MenuItem);
    rpc UpdateMenuItem(UpdateMenuItemRequest) returns (UpdateMenuItemResponse);
    rpc DeleteMenuItem(DeleteMenuItemRequest) returns (DeleteMenuItemResponse);
    rpc ListMenuItems(google.protobuf.Empty) returns (MenuItemList);
}

// Stock
message Stock {
    string item_id = 1;
    int32 quantity = 2;
}

message AddStockRequest {
    string item_id = 1;
    int32 quantity = 2;
}

message TakeStockRequest {
    string item_id = 1;
    int32 quantity = 2;
}

message GetStockRequest {
    string item_id = 1;
}

service StockService {
    rpc AddStock(AddStockRequest) returns (Stock);
    rpc TakeStock(TakeStockRequest) returns (Stock);
    rpc GetStock(GetStockRequest) returns (Stock);
}